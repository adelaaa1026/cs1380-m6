{"type":"object","id":0,"value":{"url":{"type":"string","value":"https://github.com/goldbergyoni/nodebestpractices"},"repo_id":{"type":"string","value":"goldbergyoni/nodebestpractices"},"readme":{"type":"string","value":"[‚úî]: assets/images/checkbox-small-blue.png\n\n# Node.js Best Practices\n\n<h1 align=\"center\">\n  <img src=\"assets/images/banner-2.jpg\" alt=\"Node.js Best Practices\"/>\n</h1>\n\n<br/>\n\n<div align=\"center\">\n  <img src=\"https://img.shields.io/badge/‚öô%20Item%20count%20-%20102%20Best%20Practices-blue.svg\" alt=\"102 items\"/> <img id=\"last-update-badge\" src=\"https://img.shields.io/badge/%F0%9F%93%85%20Last%20update%20-%20January%2024%2C%202023-green.svg\" alt=\"Last update: January 3rd, 2024\" /> <img src=\"https://img.shields.io/badge/ %E2%9C%94%20Updated%20For%20Version%20-%20Node%2022.0.0-brightgreen.svg\" alt=\"Updated for Node 22.0.0\"/>\n</div>\n\n<br/>\n\n[<img src=\"assets/images/twitter.svg\" width=\"16\" height=\"16\" alt=\"\" />](https://twitter.com/nodepractices/) **Follow us on Twitter!** [**@nodepractices**](https://twitter.com/nodepractices/)\n\n<br/>\n\nRead in a different language: [![CN](./assets/flags/CN.png)**CN**](./README.chinese.md), [![FR](./assets/flags/FR.png)**FR**](./README.french.md), [![BR](./assets/flags/BR.png)**BR**](./README.brazilian-portuguese.md), [![RU](./assets/flags/RU.png)**RU**](./README.russian.md), [![PL](./assets/flags/PL.png)**PL**](./README.polish.md), [![JA](./assets/flags/JA.png)**JA**](./README.japanese.md), [![EU](./assets/flags/EU.png)**EU**](./README.basque.md) [(![ES](./assets/flags/ES.png)**ES**, ![HE](./assets/flags/HE.png)**HE**, ![KR](./assets/flags/KR.png)**KR** and ![TR](./assets/flags/TR.png)**TR** in progress! )](#translations)\n\n<br/>\n\n# üéä 2024 edition is here!\n\n- **üõ∞ Modernized to 2024**: Tons of text edits, new recommended libraries, and some new best practices\n\n- **‚ú® Easily focus on new content**: Already visited before? Search for `#new` or `#updated` tags for new content only\n\n- **üîñ Curious to see examples? We have a starter**: Visit [Practica.js](https://github.com/practicajs/practica), our application example and boilerplate (beta) to see some practices in action\n\n<br/><br/>\n\n# Welcome! 3 Things You Ought To Know First\n\n**1. You are reading dozens of the best Node.js articles -** this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators\n\n**2. It is the largest compilation, and it is growing every week -** currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We'd love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our [writing guidelines here](./.operations/writing-guidelines.md)\n\n**3. Best practices have additional info -** most bullets include a **üîóRead More** link that expands on the practice with code examples, quotes from selected blogs, and more information\n\n<br/><br/>\n\n# By Yoni Goldberg\n\n### Learn with me: As a consultant, I engage with worldwide teams on various activities like workshops and code reviews. üéâAND... Hold on, I've just launched my [beyond-the-basics testing course, which is on a üéÅ limited-time sale](https://testjavascript.com/) until August 7th\n\n<br/><br/>\n\n## Table of Contents\n\n<details>\n  <summary>\n    <a href=\"#1-project-architecture-practices\">1. Project Architecture Practices (6)</a>\n  </summary>\n\n&emsp;&emsp;[1.1 Structure your solution by components `#strategic` `#updated`](#-11-structure-your-solution-by-business-components)</br>\n&emsp;&emsp;[1.2 Layer your components, keep the web layer within its boundaries `#strategic` `#updated`](#-12-layer-your-components-with-3-tiers-keep-the-web-layer-within-its-boundaries)</br>\n&emsp;&emsp;[1.3 Wrap common utilities as packages, consider publishing](#-13-wrap-common-utilities-as-packages-consider-publishing)</br>\n&emsp;&emsp;[1.4 Use environment aware, secure and hierarchical config `#updated`](#-14-use-environment-aware-secure-and-hierarchical-config)</br>\n&emsp;&emsp;[1.5 Consider all the consequences when choosing the main framework `#new`](#-15-consider-all-the-consequences-when-choosing-the-main-framework)</br>\n&emsp;&emsp;[1.6 Use TypeScript sparingly and thoughtfully `#new`](#-16-use-typescript-sparingly-and-thoughtfully)</br>\n\n</details>\n\n<details>\n  <summary>\n    <a href=\"#2-error-handling-practices\">2. Error Handling Practices (12)</a>\n  </summary>\n\n&emsp;&emsp;[2.1 Use Async-Await or promises for async error handling](#-21-use-async-await-or-promises-for-async-error-handling)</br>\n&emsp;&emsp;[2.2 Extend the built-in Error object `#strategic` `#updated`](#-22-extend-the-built-in-error-object)</br>\n&emsp;&emsp;[2.3 Distinguish operational vs programmer errors `#strategic` `#updated`](#-23-distinguish-catastrophic-errors-from-operational-errors)</br>\n&emsp;&emsp;[2.4 Handle errors centrally, not within a middleware `#strategic`](#-24-handle-errors-centrally-not-within-a-middleware)</br>\n&emsp;&emsp;[2.5 Document API errors using OpenAPI or GraphQL](#-25-document-api-errors-using-openapi-or-graphql)</br>\n&e... [truncated]"},"repo_name":{"type":"string","value":"nodebestpractices"},"author":{"type":"string","value":"goldbergyoni"},"topics":{"type":"array","id":1,"value":[{"type":"string","value":"best-practices"},{"type":"string","value":"es6"},{"type":"string","value":"eslint"},{"type":"string","value":"express"},{"type":"string","value":"expressjs"},{"type":"string","value":"javascript"},{"type":"string","value":"jest"},{"type":"string","value":"microservices"},{"type":"string","value":"mocha"},{"type":"string","value":"node-js"},{"type":"string","value":"nodejs"},{"type":"string","value":"nodejs-development"},{"type":"string","value":"npm"},{"type":"string","value":"rest"},{"type":"string","value":"style-guide"},{"type":"string","value":"styleguide"},{"type":"string","value":"testing"},{"type":"string","value":"types"}]},"language":{"type":"string","value":"Dockerfile"},"stargazers_count":{"type":"number","value":"102359"},"forks_count":{"type":"number","value":"10408"}}}