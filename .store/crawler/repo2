{"type":"object","id":0,"value":{"url":{"type":"string","value":"https://github.com/standard/standard"},"repo_id":{"type":"string","value":"standard/standard"},"readme":{"type":"string","value":"<h1 align=\"center\">\n  <a href=\"https://standardjs.com\"><img src=\"https://cdn.rawgit.com/standard/standard/master/sticker.svg\" alt=\"Standard - JavaScript Style Guide\" width=\"200\"></a>\n  <br>\n  JavaScript Standard Style\n  <br>\n  <br>\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://discord.gg/ZegqCBr\"><img src=\"https://img.shields.io/discord/612704110008991783?logo=discord&logoColor=white&label=Discord&color=5865F2\" alt=\"discord\"></a>\n  <a href=\"https://github.com/standard/standard/actions/workflows/test-external.yml\"><img src=\"https://github.com/standard/standard/actions/workflows/test-external.yml/badge.svg?branch=master\" alt=\"External tests\"></a>\n  <a href=\"https://github.com/standard/standard/actions/workflows/test-internal.yml\"><img src=\"https://github.com/standard/standard/actions/workflows/test-internal.yml/badge.svg?branch=master\" alt=\"Internal tests\"></a>\n  <a href=\"https://github.com/standard/standard/actions?query=workflow%3A%22Old+test%22\"><img src=\"https://github.com/standard/standard/workflows/Old%20test/badge.svg\" alt=\"status badge old Node test\"></a>\n  <a href=\"https://www.npmjs.com/package/standard\"><img src=\"https://img.shields.io/npm/v/standard.svg\" alt=\"npm version\"></a>\n  <a href=\"https://www.npmjs.com/package/eslint-config-standard\"><img src=\"https://img.shields.io/npm/dm/eslint-config-standard.svg\" alt=\"npm downloads\"></a>\n  <a href=\"https://standardjs.com\"><img src=\"https://img.shields.io/badge/code_style-standard-brightgreen.svg\" alt=\"Standard - JavaScript Style Guide\"></a>\n</p>\n\n<h5 align=\"center\">\n  Sponsored by&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://socket.dev\"><img src=\"https://cdn.rawgit.com/standard/standard/master/docs/logos/socket.png\" alt=\"Socket – Supply Chain Dependency Security for JavaScript and npm\" height=50 valign=\"middle\"></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://wormhole.app/?utm_medium=sponsorship&utm_source=standard&utm_campaign=feross\"><img src=\"https://cdn.rawgit.com/standard/standard/master/docs/logos/wormhole.png\" alt=\"Wormhole\" height=50 valign=\"middle\"></a>\n</h5>\n\n<p align=\"center\">\n  <a href=\"/docs/README-en.md\">English</a> •\n  <a href=\"/docs/README-esla.md\">Español (Latinoamérica)</a> •\n  <a href=\"/docs/README-fr.md\">Français</a> •\n  <a href=\"/docs/README-id.md\">Bahasa Indonesia</a> •\n  <a href=\"/docs/README-iteu.md\">Italiano (Italian)</a> •\n  <a href=\"/docs/README-ja.md\">日本語 (Japanese)</a> •\n  <a href=\"/docs/README-kokr.md\">한국어 (Korean)</a> •\n  <a href=\"/docs/README-ptbr.md\">Português (Brasil)</a> •\n  <a href=\"/docs/README-zhcn.md\">简体中文 (Simplified Chinese)</a> •\n  <a href=\"/docs/README-zhtw.md\">繁體中文 (Taiwanese Mandarin)</a>\n</p>\n\n## JavaScript style guide, linter, and formatter\n\nThis module saves you (and others!) time in three ways:\n\n- **No configuration.** The easiest way to enforce code quality in your\n  project. No decisions to make. No `.eslintrc` files to manage. It just works.\n- **Automatically format code.** Just run `standard --fix` and say goodbye to\n  messy or inconsistent code.\n- **Catch style issues & programmer errors early.** Save precious code review\n  time by eliminating back-and-forth between reviewer & contributor.\n\nGive it a try by running `npx standard --fix` right now!\n\n## Table of Contents\n\n- Quick start\n  - [Install](#install)\n  - [Usage](#usage)\n  - [What you might do if you're clever](#what-you-might-do-if-youre-clever)\n- FAQ\n  - [Why should I use JavaScript Standard Style?](#why-should-i-use-javascript-standard-style)\n  - [Who uses JavaScript Standard Style?](#who-uses-javascript-standard-style)\n  - [Are there text editor plugins?](#are-there-text-editor-plugins)\n  - [Is there a readme badge?](#is-there-a-readme-badge)\n  - [I disagree with rule X, can you change it?](#i-disagree-with-rule-x-can-you-change-it)\n  - [But this isn't a real web standard!](#but-this-isnt-a-real-web-standard)\n  - [Is there an automatic formatter?](#is-there-an-automatic-formatter)\n  - [How do I ignore files?](#how-do-i-ignore-files)\n  - [How do I disable a rule?](#how-do-i-disable-a-rule)\n  - [I use a library that pollutes the global namespace. How do I prevent \"variable is not defined\" errors?](#i-use-a-library-that-pollutes-the-global-namespace-how-do-i-prevent-variable-is-not-defined-errors)\n  - [How do I use experimental JavaScript (ES Next) features?](#how-do-i-use-experimental-javascript-es-next-features)\n  - [Can I use a JavaScript language variant, like Flow or TypeScript?](#can-i-use-a-javascript-language-variant-like-flow-or-typescript)\n  - [What about Mocha, Jest, Jasmine, QUnit, etc?](#what-about-mocha-jest-jasmine-qunit-etc)\n  - [What about Web Workers and Service Workers?](#what-about-web-workers-and-service-workers)\n  - [What is the difference between warnings and errors?](#what-is-the-difference-between-warnings-and-errors)\n  - [Can I check code inside of Markdown or HTML files?](#can-i-check-code-inside-of-markdown-or-html-files)\n  - [Is there a Git `pre-commit` hook?](#is-there-a-git-pre-commit-hook)\n  - [How do I make the output all ... [truncated]"},"repo_name":{"type":"string","value":"standard"},"author":{"type":"string","value":"standard"},"topics":{"type":"array","id":1,"value":[{"type":"string","value":"development"},{"type":"string","value":"ecmascript"},{"type":"string","value":"es6"},{"type":"string","value":"eslint"},{"type":"string","value":"javascript"},{"type":"string","value":"linter"},{"type":"string","value":"nodejs"},{"type":"string","value":"standard"},{"type":"string","value":"static-code-analysis"},{"type":"string","value":"style-guide"}]},"language":{"type":"string","value":"JavaScript"},"stargazers_count":{"type":"number","value":"29303"},"forks_count":{"type":"number","value":"2320"}}}