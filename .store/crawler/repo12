{"type":"object","id":0,"value":{"url":{"type":"string","value":"https://github.com/xojs/xo"},"repo_id":{"type":"string","value":"xojs/xo"},"readme":{"type":"string","value":"<h1 align=\"center\">\n\t<br>\n\t<img width=\"400\" src=\"media/logo.svg\" alt=\"XO\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> JavaScript/TypeScript linter (ESLint wrapper) with great defaults\n\n[![Coverage Status](https://codecov.io/gh/xojs/xo/branch/main/graph/badge.svg)](https://codecov.io/gh/xojs/xo/branch/main)\n[![XO code style](https://shields.io/badge/code_style-5ed9c7?logo=xo&labelColor=gray&logoSize=auto&logoWidth=20)](https://github.com/xojs/xo)\n\nOpinionated but configurable ESLint wrapper with lots of goodies included. Enforces strict and readable code. Never discuss code style on a pull request again! No decision-making. No `eslint.config.js` to manage. It just works!\n\nIt uses [ESLint](https://eslint.org) underneath, so issues regarding built-in rules should be opened over [there](https://github.com/eslint/eslint/issues).\n\n**XO requires your project to be [ESM](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c).**\n\n![](https://raw.githubusercontent.com/sindresorhus/eslint-formatter-pretty/main/screenshot.png)\n\n## Highlights\n\n- Beautiful output.\n- Zero-config, but [configurable when needed](#config).\n- Enforces readable code, because you read more code than you write.\n- No need to specify file paths to lint as it lints all JS/TS files except for [commonly ignored paths](#ignores).\n- [Flat config customization.](#config)\n- [TypeScript supported by default.](#typescript)\n- Includes many useful ESLint plugins, like [`unicorn`](https://github.com/sindresorhus/eslint-plugin-unicorn), [`import`](https://github.com/benmosher/eslint-plugin-import), [`ava`](https://github.com/avajs/eslint-plugin-ava), [`n`](https://github.com/eslint-community/eslint-plugin-n) and more.\n- Caches results between runs for much better performance.\n- Super simple to add XO to a project with [`$ npm init xo`](https://github.com/xojs/create-xo).\n- Fix many issues automagically with `$ xo --fix`.\n- Open all files with errors at the correct line in your editor with `$ xo --open`.\n- Specify [indent](#space) and [semicolon](#semicolon) preferences easily without messing with the rule config.\n- Optionally use the [Prettier](https://github.com/prettier/prettier) code style or turn off all Prettier rules with the `compat` option.\n- Optionally use `eslint-config-xo-react` for easy jsx and react linting with zero config.\n- Optionally use with ESLint [directly](#usage-as-an-eslint-configuration)\n- Great [editor plugins](#editor-plugins).\n\n## Install\n\n```sh\nnpm install xo --save-dev\n```\n\n*You must install XO locally. You can run it directly with `$ npx xo`.*\n\n*You'll need [eslint-config-xo-vue](https://github.com/ChocPanda/eslint-config-xo-vue#use-with-xo) for specific linting in a Vue app.*\n\n## Usage\n\n```\n$ xo --help\n\n\tUsage\n\t\t$ xo [<file|glob> ...]\n\n\tOptions\n\t\t--fix             Automagically fix issues\n\t\t--reporter        Reporter to use\n\t\t--ignore          Ignore pattern globs, can be set multiple times\n\t\t--space           Use space indent instead of tabs [Default: 2]\n\t\t--no-semicolon    Prevent use of semicolons\n\t\t--prettier        Conform to Prettier code style or turn off conflicting rules\n\t\t--react           Include React plugins and xo-react linting rules [Default: false]\n\t\t--open            Open files with issues in your editor\n\t\t--quiet           Show only errors and no warnings\n\t\t--cwd=<dir>       Working directory for files\n\t\t--stdin           Validate/fix code from stdin\n\t\t--stdin-filename  Specify a filename for the --stdin option\n\t\t--print-config    Print the ESLint configuration for the given file\n\n\tExamples\n\t\t$ xo\n\t\t$ xo index.js\n\t\t$ xo *.js !foo.js\n\t\t$ xo --space\n\t\t$ xo --print-config=index.js\n\t\t$ echo 'const x=true' | xo --stdin --fix\n\n\tTips\n\t\t- Add XO to your project with `npm init xo`.\n\t\t- Put options in xo.config.js instead of using flags so other tools can read it.\n```\n\n## Default code style\n\n*Any of these can be [overridden](#rules) if necessary.*\n\n- Tab indentation *[(or space)](#space)*\n- Semicolons *[(or not)](#semicolon)*\n- Single-quotes\n- [Trailing comma](https://medium.com/@nikgraf/why-you-should-enforce-dangling-commas-for-multiline-statements-d034c98e36f8) for multiline statements\n- No unused variables\n- Space after keyword `if (condition) {}`\n- Always `===` instead of `==`\n\nCheck out an [example](index.js) and the [ESLint rules](https://github.com/xojs/eslint-config-xo/blob/main/index.js).\n\n## Workflow\n\nThe recommended workflow is to add XO locally to your project and run it with the tests.\n\nSimply run `$ npm init xo` (with any options) to add XO to create an `xo.config.js`.\n\n## Config\n\nYou can configure XO options by creating an `xo.config.js` or an `xo.config.ts` file in the root directory of your project. XO supports all js/ts file extensions (js,cjs,mjs,ts,cts,mts) automatically. A XO config is an extension of ESLint's Flat Config. Like ESLint, an XO config exports an array of XO config objects. XO config objects extend [ESLint Configuration Objects](https://eslint.org/docs/latest/use/configure/configuration-... [truncated]"},"repo_name":{"type":"string","value":"xo"},"author":{"type":"string","value":"xojs"},"topics":{"type":"array","id":1,"value":[{"type":"string","value":"best-practices"},{"type":"string","value":"code-style"},{"type":"string","value":"eslint"},{"type":"string","value":"eslint-plugin"},{"type":"string","value":"eslint-rules"},{"type":"string","value":"linter"},{"type":"string","value":"nodejs"},{"type":"string","value":"shareable-configs"},{"type":"string","value":"style-linter"},{"type":"string","value":"unicorns"},{"type":"string","value":"xo"}]},"language":{"type":"string","value":"TypeScript"},"stargazers_count":{"type":"number","value":"7763"},"forks_count":{"type":"number","value":"290"}}}