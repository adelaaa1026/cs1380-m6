{"type":"object","id":0,"value":{"url":{"type":"string","value":"https://github.com/eslint/eslint"},"repo_id":{"type":"string","value":"eslint/eslint"},"readme":{"type":"string","value":"[![npm version](https://img.shields.io/npm/v/eslint.svg)](https://www.npmjs.com/package/eslint)\n[![Downloads](https://img.shields.io/npm/dm/eslint.svg)](https://www.npmjs.com/package/eslint)\n[![Build Status](https://github.com/eslint/eslint/workflows/CI/badge.svg)](https://github.com/eslint/eslint/actions)\n<br>\n[![Open Collective Backers](https://img.shields.io/opencollective/backers/eslint)](https://opencollective.com/eslint)\n[![Open Collective Sponsors](https://img.shields.io/opencollective/sponsors/eslint)](https://opencollective.com/eslint)\n\n# ESLint\n\n[Website](https://eslint.org) |\n[Configure ESLint](https://eslint.org/docs/latest/use/configure) |\n[Rules](https://eslint.org/docs/rules/) |\n[Contribute to ESLint](https://eslint.org/docs/latest/contribute) |\n[Report Bugs](https://eslint.org/docs/latest/contribute/report-bugs) |\n[Code of Conduct](https://eslint.org/conduct) |\n[Twitter](https://twitter.com/geteslint) |\n[Discord](https://eslint.org/chat) |\n[Mastodon](https://fosstodon.org/@eslint) |\n[Bluesky](https://bsky.app/profile/eslint.org)\n\nESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:\n\n-   ESLint uses [Espree](https://github.com/eslint/js/tree/main/packages/espree) for JavaScript parsing.\n-   ESLint uses an AST to evaluate patterns in code.\n-   ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.\n\n## Table of Contents\n\n1. [Installation and Usage](#installation-and-usage)\n1. [Configuration](#configuration)\n1. [Version Support](#version-support)\n1. [Code of Conduct](#code-of-conduct)\n1. [Filing Issues](#filing-issues)\n1. [Frequently Asked Questions](#frequently-asked-questions)\n1. [Releases](#releases)\n1. [Security Policy](#security-policy)\n1. [Semantic Versioning Policy](#semantic-versioning-policy)\n1. [License](#license)\n1. [Team](#team)\n1. [Sponsors](#sponsors)\n1. [Technology Sponsors](#technology-sponsors) <!-- markdownlint-disable-line MD051 -->\n\n## Installation and Usage\n\nPrerequisites: [Node.js](https://nodejs.org/) (`^18.18.0`, `^20.9.0`, or `>=21.1.0`) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)\n\nYou can install and configure ESLint using this command:\n\n```shell\nnpm init @eslint/config@latest\n```\n\nAfter that, you can run ESLint on any file or directory like this:\n\n```shell\nnpx eslint yourfile.js\n```\n\n### pnpm Installation\n\nTo use ESLint with pnpm, we recommend setting up a `.npmrc` file with at least the following settings:\n\n```text\nauto-install-peers=true\nnode-linker=hoisted\n```\n\nThis ensures that pnpm installs dependencies in a way that is more compatible with npm and is less likely to produce errors.\n\n## Configuration\n\nYou can configure rules in your `eslint.config.js` files as in this example:\n\n```js\nimport { defineConfig } from \"eslint/config\";\n\nexport default defineConfig([\n\t{\n\t\tfiles: [\"**/*.js\", \"**/*.cjs\", \"**/*.mjs\"],\n\t\trules: {\n\t\t\t\"prefer-const\": \"warn\",\n\t\t\t\"no-constant-binary-expression\": \"error\",\n\t\t},\n\t},\n]);\n```\n\nThe names `\"prefer-const\"` and `\"no-constant-binary-expression\"` are the names of [rules](https://eslint.org/docs/rules) in ESLint. The first value is the error level of the rule and can be one of these values:\n\n-   `\"off\"` or `0` - turn the rule off\n-   `\"warn\"` or `1` - turn the rule on as a warning (doesn't affect exit code)\n-   `\"error\"` or `2` - turn the rule on as an error (exit code will be 1)\n\nThe three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the [configuration docs](https://eslint.org/docs/latest/use/configure)).\n\n## Version Support\n\nThe ESLint team provides ongoing support for the current version and six months of limited support for the previous version. Limited support includes critical bug fixes, security issues, and compatibility issues only.\n\nESLint offers commercial support for both current and previous versions through our partners, [Tidelift][tidelift] and [HeroDevs][herodevs].\n\nSee [Version Support](https://eslint.org/version-support) for more details.\n\n## Code of Conduct\n\nESLint adheres to the [OpenJS Foundation Code of Conduct](https://eslint.org/conduct).\n\n## Filing Issues\n\nBefore filing an issue, please be sure to read the guidelines for what you're reporting:\n\n-   [Bug Report](https://eslint.org/docs/latest/contribute/report-bugs)\n-   [Propose a New Rule](https://eslint.org/docs/latest/contribute/propose-new-rule)\n-   [Proposing a Rule Change](https://eslint.org/docs/latest/contribute/propose-rule-change)\n-   [Request a Change](https://eslint.org/docs/latest/contribute/request-change)\n\n## Frequently Asked Questions\n\n### Does ESLint support JSX?\n\nYes, ESLint natively supports parsing JSX syntax (this must be enabled in [configuration](https://eslint.org/docs/latest/use/configure)). Please note that supporting JSX syntax _is not_ the same as supporting... [truncated]"},"repo_name":{"type":"string","value":"eslint"},"author":{"type":"string","value":"eslint"},"topics":{"type":"array","id":1,"value":[{"type":"string","value":"ecmascript"},{"type":"string","value":"eslint"},{"type":"string","value":"javascript"},{"type":"string","value":"linter"},{"type":"string","value":"static-code-analysis"}]},"language":{"type":"string","value":"JavaScript"},"stargazers_count":{"type":"number","value":"25806"},"forks_count":{"type":"number","value":"4700"}}}