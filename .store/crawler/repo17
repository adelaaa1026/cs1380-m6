{"type":"object","id":0,"value":{"url":{"type":"string","value":"https://github.com/wbthomason/packer.nvim"},"repo_id":{"type":"string","value":"wbthomason/packer.nvim"},"readme":{"type":"string","value":"**NOTICE:**\n\nThis repository is currently unmaintained. For the time being (as of August, 2023), it is recommended to use one of the following plugin managers instead:\n\n- [lazy.nvim](https://github.com/folke/lazy.nvim): Most stable and maintained plugin manager for Nvim.\n- [pckr.nvim](https://github.com/lewis6991/pckr.nvim): Spiritual successor of packer.nvim. Functional but not as stable as lazy.nvim.\n\n# packer.nvim\n\n[![Gitter](https://badges.gitter.im/packer-nvim/community.svg)](https://gitter.im/packer-nvim/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n[`use-package`](https://github.com/jwiegley/use-package) inspired plugin/package management for\nNeovim.\n\nHave questions? Start a [discussion](https://github.com/wbthomason/packer.nvim/discussions).\n\nHave a problem or idea? Make an [issue](https://github.com/wbthomason/packer.nvim/issues) or a [PR](https://github.com/wbthomason/packer.nvim/pulls).\n\n**Packer is built on native packages. You may wish to read `:h packages` before continuing**\n\n## Table of Contents\n1. [Features](#features)\n2. [Requirements](#requirements)\n3. [Quickstart](#quickstart)\n4. [Bootstrapping](#bootstrapping)\n5. [Usage](#usage)\n    1. [The startup function](#the-startup-function)\n    2. [Custom Initialization](#custom-initialization)\n    3. [Specifying Plugins](#specifying-plugins)\n    4. [Performing plugin management operations](#performing-plugin-management-operations)\n    5. [Extending packer](#extending-packer)\n    6. [Compiling Lazy-Loaders](#compiling-lazy-loaders)\n\t7. [User autocommands](#user-autocommands)\n\t8. [Using a floating window](#using-a-floating-window)\n6. [Profiling](#profiling)\n7. [Debugging](#debugging)\n8. [Compatibility and known issues](#compatibility-and-known-issues)\n9. [Contributors](#contributors)\n\n## Features\n- Declarative plugin specification\n- Support for dependencies\n- Support for Luarocks dependencies\n- Expressive configuration and lazy-loading options\n- Automatically compiles efficient lazy-loading code to improve startup time\n- Uses native packages\n- Extensible\n- Written in Lua, configured in Lua\n- Post-install/update hooks\n- Uses jobs for async installation\n- Support for `git` tags, branches, revisions, submodules\n- Support for local plugins\n\n## Requirements\n- You need to be running **Neovim v0.5.0+**\n- If you are on Windows 10, you need developer mode enabled in order to use local plugins (creating\n  symbolic links requires admin privileges on Windows - credit to @TimUntersberger for this note)\n\n## Quickstart\nTo get started, first clone this repository to somewhere on your `packpath`, e.g.:\n\n> Unix, Linux Installation\n\n```shell\ngit clone --depth 1 https://github.com/wbthomason/packer.nvim\\\n ~/.local/share/nvim/site/pack/packer/start/packer.nvim\n```\n\nIf you use Arch Linux, there is also [an AUR\npackage](https://aur.archlinux.org/packages/nvim-packer-git/).\n\n> Windows Powershell Installation\n\n```shell\ngit clone https://github.com/wbthomason/packer.nvim \"$env:LOCALAPPDATA\\nvim-data\\site\\pack\\packer\\start\\packer.nvim\"\n```\n\nThen you can write your plugin specification in Lua, e.g. (in `~/.config/nvim/lua/plugins.lua`):\n\n```lua\n-- This file can be loaded by calling `lua require('plugins')` from your init.vim\n\n-- Only required if you have packer configured as `opt`\nvim.cmd [[packadd packer.nvim]]\n\nreturn require('packer').startup(function(use)\n  -- Packer can manage itself\n  use 'wbthomason/packer.nvim'\n\n  -- Simple plugins can be specified as strings\n  use 'rstacruz/vim-closer'\n\n  -- Lazy loading:\n  -- Load on specific commands\n  use {'tpope/vim-dispatch', opt = true, cmd = {'Dispatch', 'Make', 'Focus', 'Start'}}\n\n  -- Load on an autocommand event\n  use {'andymass/vim-matchup', event = 'VimEnter'}\n\n  -- Load on a combination of conditions: specific filetypes or commands\n  -- Also run code after load (see the \"config\" key)\n  use {\n    'w0rp/ale',\n    ft = {'sh', 'zsh', 'bash', 'c', 'cpp', 'cmake', 'html', 'markdown', 'racket', 'vim', 'tex'},\n    cmd = 'ALEEnable',\n    config = 'vim.cmd[[ALEEnable]]'\n  }\n\n  -- Plugins can have dependencies on other plugins\n  use {\n    'haorenW1025/completion-nvim',\n    opt = true,\n    requires = {{'hrsh7th/vim-vsnip', opt = true}, {'hrsh7th/vim-vsnip-integ', opt = true}}\n  }\n\n  -- Plugins can also depend on rocks from luarocks.org:\n  use {\n    'my/supercoolplugin',\n    rocks = {'lpeg', {'lua-cjson', version = '2.1.0'}}\n  }\n\n  -- You can specify rocks in isolation\n  use_rocks 'penlight'\n  use_rocks {'lua-resty-http', 'lpeg'}\n\n  -- Local plugins can be included\n  use '~/projects/personal/hover.nvim'\n\n  -- Plugins can have post-install/update hooks\n  use {'iamcco/markdown-preview.nvim', run = 'cd app && yarn install', cmd = 'MarkdownPreview'}\n\n  -- Post-install/update hook with neovim command\n  use { 'nvim-treesitter/nvim-treesitter', run = ':TSUpdate' }\n\n  -- Post-install/update hook with call of vimscript function with argument\n  use { 'glacambre/firenvim', run = function() vim.fn['firenvim#install'](0) en... [truncated]"},"repo_name":{"type":"string","value":"packer.nvim"},"author":{"type":"string","value":"wbthomason"},"topics":{"type":"array","id":1,"value":[{"type":"string","value":"lua"},{"type":"string","value":"neovim"},{"type":"string","value":"neovim-plugin"},{"type":"string","value":"nvim"},{"type":"string","value":"package-manager"},{"type":"string","value":"packer"},{"type":"string","value":"plugin-manager"}]},"language":{"type":"string","value":"Lua"},"stargazers_count":{"type":"number","value":"7999"},"forks_count":{"type":"number","value":"262"}}}